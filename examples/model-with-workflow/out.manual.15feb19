
> (sttaus)

; in: STTAUS
;     (STTAUS)
; 
; caught STYLE-WARNING:
;   undefined function: STTAUS
; 
; compilation unit finished
;   Undefined function:
;     STTAUS
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNDEFINED-FUNCTION:
  The function COMMON-LISP-USER::STTAUS is undefined.

> (status)

To see rule switches, do (switches)
  To beam or not to beam    : NIL
  Normal Form (NF) parse    : T
  Out of vocabulary flag    : NIL
 *PRINT-READABLY*           : NIL
 *PRINT-PRETTY*             : T
  Currently loaded grammar  : 
 *CCG-GRAMMAR*              : 0 items
 *LEX-RULES-TABLE*          : 0 items
 *CKY-HASHTABLE*            : 0 items
 *CKY-INPUT* for the table  : NIL 
  Most likely LF w/weight   : NIL 
  Its most likely derivation: NIL
  Sum of weighted counts    : 0.0 
  Most likely LF's cells    : NIL 
  Number of differing LFs   : 0 
  Most weighted derivation  : NIL 
NIL
> (load-grammar "g1" :make t)


=========================== p r e p a r i n g ===============================

Project name: g1
  Input : g1.lisptokens 
  Output: g1.ded 
Check to see if output contains any spec errors.
Fix and re-run if it does.
You can also re/create g1.lisptokens by running 'tokens g1' sed script offline.
======================= l o a d i n g =======================================
; loading #P"/Users/bozsahin/myrepos/ccglab/examples/model-with-workflow/g1.ded"

Project [g1] is assumed to consist of
-----------------------------------------------------------------------------
  CCG grammar source : g1.ccg $
    Its token form   : g1.lisptokens $
  Deduction grammar  : g1.ded $ (derived from g1.lisptokens)
  Induction grammar  : g1.ind #
  Supervision source : g1.sup ^
  Model-specific code: g1.lisp ^
   and other model-specific files you may create.
       *CCG-GRAMMAR* : set from g1.ded
  *LEX-RULES-TABLE*  : set from g1.ded
Expected files       : $ for deduction, # for induction, ^ for model development
=============================================================================
T
> (make-supervision "g1")


STYLE-WARNING: redefining COMMON-LISP-USER::LALR-PARSER in DEFUN

=========================== p r e p a r i n g ===============================

Project name: g1
  Input : g1.suptokens 
  Output: g1.sup 
Check to see if output contains any spec errors.
Fix and re-run if it does.
You can also re/create g1.suptokens by running 'suptokens g1' sed script offline.

STYLE-WARNING: redefining COMMON-LISP-USER::LALR-PARSER in DEFUN

=========================== p r e p a r i n g ===============================

Project name: g1
  Input : g1.supervision and g1.suptokens
  Output: g1.sup 
Check to see if output contains any spec errors.
Fix and re-run if it does.
You can also re/create g1.suptokens by running 'suptokens g1' sed script offline.
NIL
> (update-model "g1" 10 1.0 1.0 :load t)
*Beamp* = NIL  *Beam-exp* = 0.9

======================= l o a d i n g =======================================
; loading #P"/Users/bozsahin/myrepos/ccglab/examples/model-with-workflow/g1.ind"

Project [g1] is assumed to consist of
-----------------------------------------------------------------------------
  CCG grammar source : g1.ccg $
    Its token form   : g1.lisptokens $
  Deduction grammar  : g1.ded $ (derived from g1.lisptokens)
  Induction grammar  : g1.ind #
  Supervision source : g1.sup ^
  Model-specific code: g1.lisp ^
   and other model-specific files you may create.
       *CCG-GRAMMAR* : set from g1.ind
  *LEX-RULES-TABLE*  : set from g1.ind
Expected files       : $ for deduction, # for induction, ^ for model development
=============================================================================

Supervision file loaded: g1.sup
Done. use (show-training/save-training) to see/save the results
T
> (show-training)
The rule set used in the experiment:
To change a switch, use (setf <switchname> <value>)
	      where <value> is T (on) or NIL (off)
	  *f-apply*     T
	  *b-apply*     T
	  *f-comp*      T
	  *b-comp*      T
	  *fx-comp*     T
	  *bx-comp*     T
	  *f-sub*       T
	  *b-sub*       T
	  *fx-sub*      T
	  *bx-sub*      T
          *f-subbar*    NIL
	  *b-subbar*    NIL
	  *fx-subbar*   NIL
	  *bx-subbar*   NIL
	  *f-subcomp*   NIL
	  *b-subcomp*   NIL
	  *fx-subcomp*  NIL
	  *bx-subcomp*  NIL
          *f2-comp*     T
	  *b2-comp*     T
	  *fx2-comp*    T
	  *bx2-comp*    T
	  *f2-sub*      T
	  *b2-sub*      T
	  *fx2-sub*     T
	  *bx2-sub*     T
	  *f2-subcomp*  NIL
	  *f3-comp*     T
	  *b3-comp*     T
	  *fx3-comp*    T
	  *bx3-comp*    T

Training parameters: N = 10 alpha0 = 1.0 c = 1.0 n = 6  *Beamp* = NIL  *Beam-exp* = 0.9

Model parameters before and after training
================================================
key   lex             initial  final    diff 
------------------------------------------------
1     KNOWS             1.0 6.725861  (5.725861)
2     KNOWS             1.0  3.43604  ( 2.43604)
3     KNOWS             1.0 -1.86293  (-2.86293)
4     KNOWS             1.0 -2.58007  (-3.58007)
5     LOVES             1.0 7.482493  (6.482493)
6     LOVES             1.0 -5.48249  (-6.48249)
7     JOHN              1.0 5.533658  (4.533658)
8     JOHN              1.0 2.982362  (1.982362)
9     JOHN              1.0  3.86692  ( 2.86692)
10    JOHN              1.0 -1.35396  (-2.35396)
11    MARY              1.0 5.095231  (4.095231)
12    MARY              1.0  3.27333  ( 2.27333)
13    MARY              1.0 4.292733  (3.292733)
14    MARY              1.0 -1.72071  (-2.72071)
15    JOHN              1.0 -3.34851  (-4.34851)
16    JOHN              1.0 -1.35396  (-2.35396)
17    MARY              1.0 -3.17686  (-4.17686)
18    MARY              1.0 -1.72071  (-2.72071)
================================================
NIL
> (save-training "new-g1.ind")

NIL
> (load-model "new-g1")

======================= l o a d i n g =======================================
; loading #P"/Users/bozsahin/myrepos/ccglab/examples/model-with-workflow/new-g1.ind"

Project [new-g1] is assumed to consist of
-----------------------------------------------------------------------------
  CCG grammar source : new-g1.ccg $
    Its token form   : new-g1.lisptokens $
  Deduction grammar  : new-g1.ded $ (derived from new-g1.lisptokens)
  Induction grammar  : new-g1.ind #
  Supervision source : new-g1.sup ^
  Model-specific code: new-g1.lisp ^
   and other model-specific files you may create.
       *CCG-GRAMMAR* : set from new-g1.ind
  *LEX-RULES-TABLE*  : set from new-g1.ind
Expected files       : $ for deduction, # for induction, ^ for model development
=============================================================================
T
> (rank '(john knows mary loves john))

T
> (ders)


Derivation 1
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE CAT) DOG)) =
    (KNOW DOG (LOVE CAT DOG))

Derivation 2
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((JOHN (LAM X (LAM Y ((LOVE Y) X)))) CAT)) =
    (KNOW DOG (JOHN (\ X . \ Y . LOVE Y X) CAT))

Derivation 3
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE CAT) JOHN)) =
    (KNOW DOG (LOVE CAT JOHN))

Derivation 4
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE DOG) CAT)) =
    (KNOW DOG (LOVE DOG CAT))

Derivation 5
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((JOHN (LAM X (LAM Y ((LOVE X) Y)))) CAT)) =
    (KNOW DOG (JOHN (\ X . \ Y . LOVE X Y) CAT))

Derivation 6
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE JOHN) CAT)) =
    (KNOW DOG (LOVE JOHN CAT))

Derivation 7
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE MARY) DOG)) =
    (KNOW DOG (LOVE MARY DOG))

Derivation 8
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((JOHN (LAM X (LAM Y ((LOVE Y) X)))) MARY)) =
    (KNOW DOG (JOHN (\ X . \ Y . LOVE Y X) MARY))

Derivation 9
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE MARY) JOHN)) =
    (KNOW DOG (LOVE MARY JOHN))

Derivation 10
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE DOG) MARY)) =
    (KNOW DOG (LOVE DOG MARY))

Derivation 11
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((JOHN (LAM X (LAM Y ((LOVE X) Y)))) MARY)) =
    (KNOW DOG (JOHN (\ X . \ Y . LOVE X Y) MARY))

Derivation 12
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE JOHN) MARY)) =
    (KNOW DOG (LOVE JOHN MARY))

Derivation 13
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE CAT) JOHN)) =
    (KNOW DOG (LOVE CAT JOHN))

Derivation 14
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE JOHN) CAT)) =
    (KNOW DOG (LOVE JOHN CAT))

Derivation 15
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE MARY) JOHN)) =
    (KNOW DOG (LOVE MARY JOHN))

Derivation 16
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE JOHN) MARY)) =
    (KNOW DOG (LOVE JOHN MARY))

Derivation 17
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) DOG)) DOG) =
    (KNOW (LOVE CAT DOG) DOG)

Derivation 18
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((JOHN (LAM X (LAM Y ((LOVE Y) X)))) CAT)) DOG) =
    (KNOW (JOHN (\ X . \ Y . LOVE Y X) CAT) DOG)

Derivation 19
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) JOHN)) DOG) =
    (KNOW (LOVE CAT JOHN) DOG)

Derivation 20
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE DOG) CAT)) DOG) =
    (KNOW (LOVE DOG CAT) DOG)

Derivation 21
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((JOHN (LAM X (LAM Y ((LOVE X) Y)))) CAT)) DOG) =
    (KNOW (JOHN (\ X . \ Y . LOVE X Y) CAT) DOG)

Derivation 22
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) CAT)) DOG) =
    (KNOW (LOVE JOHN CAT) DOG)

Derivation 23
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) DOG)) DOG) =
    (KNOW (LOVE MARY DOG) DOG)

Derivation 24
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((JOHN (LAM X (LAM Y ((LOVE Y) X)))) MARY)) DOG) =
    (KNOW (JOHN (\ X . \ Y . LOVE Y X) MARY) DOG)

Derivation 25
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) JOHN)) DOG) =
    (KNOW (LOVE MARY JOHN) DOG)

Derivation 26
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE DOG) MARY)) DOG) =
    (KNOW (LOVE DOG MARY) DOG)

Derivation 27
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((JOHN (LAM X (LAM Y ((LOVE X) Y)))) MARY)) DOG) =
    (KNOW (JOHN (\ X . \ Y . LOVE X Y) MARY) DOG)

Derivation 28
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) MARY)) DOG) =
    (KNOW (LOVE JOHN MARY) DOG)

Derivation 29
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) JOHN)) DOG) =
    (KNOW (LOVE CAT JOHN) DOG)

Derivation 30
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) CAT)) DOG) =
    (KNOW (LOVE JOHN CAT) DOG)

Derivation 31
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) JOHN)) DOG) =
    (KNOW (LOVE MARY JOHN) DOG)

Derivation 32
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) MARY)) DOG) =
    (KNOW (LOVE JOHN MARY) DOG)

Derivation 33
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE CAT) DOG)) =
    (KNOW DOG (LOVE CAT DOG))

Derivation 34
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85179 ((KNOW G85179) ((LOVE CAT) X))))) DOG) =
    (JOHN (\ X . \ G85183 . KNOW G85183 (LOVE CAT X)) DOG)

Derivation 35
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE CAT) JOHN)) =
    (KNOW DOG (LOVE CAT JOHN))

Derivation 36
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE DOG) CAT)) =
    (KNOW DOG (LOVE DOG CAT))

Derivation 37
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85191 ((KNOW G85191) ((LOVE X) CAT))))) DOG) =
    (JOHN (\ X . \ G85195 . KNOW G85195 (LOVE X CAT)) DOG)

Derivation 38
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE JOHN) CAT)) =
    (KNOW DOG (LOVE JOHN CAT))

Derivation 39
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE MARY) DOG)) =
    (KNOW DOG (LOVE MARY DOG))

Derivation 40
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85203 ((KNOW G85203) ((LOVE MARY) X))))) DOG) =
    (JOHN (\ X . \ G85207 . KNOW G85207 (LOVE MARY X)) DOG)

Derivation 41
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE MARY) JOHN)) =
    (KNOW DOG (LOVE MARY JOHN))

Derivation 42
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE DOG) MARY)) =
    (KNOW DOG (LOVE DOG MARY))

Derivation 43
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85215 ((KNOW G85215) ((LOVE X) MARY))))) DOG) =
    (JOHN (\ X . \ G85219 . KNOW G85219 (LOVE X MARY)) DOG)

Derivation 44
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE JOHN) MARY)) =
    (KNOW DOG (LOVE JOHN MARY))

Derivation 45
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) DOG)) DOG) =
    (KNOW (LOVE CAT DOG) DOG)

Derivation 46
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85227 ((KNOW ((LOVE CAT) X)) G85227)))) DOG) =
    (JOHN (\ X . \ G85231 . KNOW (LOVE CAT X) G85231) DOG)

Derivation 47
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) JOHN)) DOG) =
    (KNOW (LOVE CAT JOHN) DOG)

Derivation 48
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE DOG) CAT)) DOG) =
    (KNOW (LOVE DOG CAT) DOG)

Derivation 49
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85239 ((KNOW ((LOVE X) CAT)) G85239)))) DOG) =
    (JOHN (\ X . \ G85243 . KNOW (LOVE X CAT) G85243) DOG)

Derivation 50
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) CAT)) DOG) =
    (KNOW (LOVE JOHN CAT) DOG)

Derivation 51
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) DOG)) DOG) =
    (KNOW (LOVE MARY DOG) DOG)

Derivation 52
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85251 ((KNOW ((LOVE MARY) X)) G85251)))) DOG) =
    (JOHN (\ X . \ G85255 . KNOW (LOVE MARY X) G85255) DOG)

Derivation 53
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) JOHN)) DOG) =
    (KNOW (LOVE MARY JOHN) DOG)

Derivation 54
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE DOG) MARY)) DOG) =
    (KNOW (LOVE DOG MARY) DOG)

Derivation 55
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85263 ((KNOW ((LOVE X) MARY)) G85263)))) DOG) =
    (JOHN (\ X . \ G85267 . KNOW (LOVE X MARY) G85267) DOG)

Derivation 56
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P DOG))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) MARY)) DOG) =
    (KNOW (LOVE JOHN MARY) DOG)

Derivation 57
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE CAT) DOG)) =
    (KNOW JOHN (LOVE CAT DOG))

Derivation 58
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((JOHN (LAM X (LAM Y ((LOVE Y) X)))) CAT)) =
    (KNOW JOHN (JOHN (\ X . \ Y . LOVE Y X) CAT))

Derivation 59
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE CAT) JOHN)) =
    (KNOW JOHN (LOVE CAT JOHN))

Derivation 60
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE DOG) CAT)) =
    (KNOW JOHN (LOVE DOG CAT))

Derivation 61
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((JOHN (LAM X (LAM Y ((LOVE X) Y)))) CAT)) =
    (KNOW JOHN (JOHN (\ X . \ Y . LOVE X Y) CAT))

Derivation 62
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE JOHN) CAT)) =
    (KNOW JOHN (LOVE JOHN CAT))

Derivation 63
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE MARY) DOG)) =
    (KNOW JOHN (LOVE MARY DOG))

Derivation 64
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((JOHN (LAM X (LAM Y ((LOVE Y) X)))) MARY)) =
    (KNOW JOHN (JOHN (\ X . \ Y . LOVE Y X) MARY))

Derivation 65
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE MARY) JOHN)) =
    (KNOW JOHN (LOVE MARY JOHN))

Derivation 66
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE DOG) MARY)) =
    (KNOW JOHN (LOVE DOG MARY))

Derivation 67
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((JOHN (LAM X (LAM Y ((LOVE X) Y)))) MARY)) =
    (KNOW JOHN (JOHN (\ X . \ Y . LOVE X Y) MARY))

Derivation 68
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE JOHN) MARY)) =
    (KNOW JOHN (LOVE JOHN MARY))

Derivation 69
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE CAT) JOHN)) =
    (KNOW JOHN (LOVE CAT JOHN))

Derivation 70
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE JOHN) CAT)) =
    (KNOW JOHN (LOVE JOHN CAT))

Derivation 71
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE MARY) JOHN)) =
    (KNOW JOHN (LOVE MARY JOHN))

Derivation 72
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW X) S)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE JOHN) MARY)) =
    (KNOW JOHN (LOVE JOHN MARY))

Derivation 73
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) DOG)) JOHN) =
    (KNOW (LOVE CAT DOG) JOHN)

Derivation 74
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((JOHN (LAM X (LAM Y ((LOVE Y) X)))) CAT)) JOHN) =
    (KNOW (JOHN (\ X . \ Y . LOVE Y X) CAT) JOHN)

Derivation 75
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) JOHN)) JOHN) =
    (KNOW (LOVE CAT JOHN) JOHN)

Derivation 76
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE DOG) CAT)) JOHN) =
    (KNOW (LOVE DOG CAT) JOHN)

Derivation 77
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((JOHN (LAM X (LAM Y ((LOVE X) Y)))) CAT)) JOHN) =
    (KNOW (JOHN (\ X . \ Y . LOVE X Y) CAT) JOHN)

Derivation 78
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P CAT)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) CAT)) JOHN) =
    (KNOW (LOVE JOHN CAT) JOHN)

Derivation 79
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) DOG)) JOHN) =
    (KNOW (LOVE MARY DOG) JOHN)

Derivation 80
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((JOHN (LAM X (LAM Y ((LOVE Y) X)))) MARY)) JOHN) =
    (KNOW (JOHN (\ X . \ Y . LOVE Y X) MARY) JOHN)

Derivation 81
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE Y) X)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) JOHN)) JOHN) =
    (KNOW (LOVE MARY JOHN) JOHN)

Derivation 82
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY)) ((LAM P (P DOG)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE DOG) MARY)) JOHN) =
    (KNOW (LOVE DOG MARY) JOHN)

Derivation 83
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY))
           ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY))
            ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY))
             ((LAM P (LAM X ((JOHN P) X))) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((JOHN (LAM X (LAM Y ((LOVE X) Y)))) MARY)) JOHN) =
    (KNOW (JOHN (\ X . \ Y . LOVE X Y) MARY) JOHN)

Derivation 84
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))
>     (MARY)(LOVES JOHN) := S
        : ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y))))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P MARY)) ((LAM P (P JOHN)) (LAM X (LAM Y ((LOVE X) Y)))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) MARY)) JOHN) =
    (KNOW (LOVE JOHN MARY) JOHN)

Derivation 85
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) JOHN)) JOHN) =
    (KNOW (LOVE CAT JOHN) JOHN)

Derivation 86
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) CAT)) JOHN) =
    (KNOW (LOVE JOHN CAT) JOHN)

Derivation 87
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) JOHN)) JOHN) =
    (KNOW (LOVE MARY JOHN) JOHN)

Derivation 88
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))))
>     (KNOWS)(MARY LOVES JOHN) := S\*NP
        : ((LAM S (LAM X ((KNOW S) X)))
           ((LAM P (P JOHN))
            (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM P (P JOHN))
             (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) MARY)) JOHN) =
    (KNOW (LOVE JOHN MARY) JOHN)

Derivation 89
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE CAT) DOG)) =
    (KNOW JOHN (LOVE CAT DOG))

Derivation 90
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85371 ((KNOW G85371) ((LOVE CAT) X))))) JOHN) =
    (JOHN (\ X . \ G85375 . KNOW G85375 (LOVE CAT X)) JOHN)

Derivation 91
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE CAT) JOHN)) =
    (KNOW JOHN (LOVE CAT JOHN))

Derivation 92
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE DOG) CAT)) =
    (KNOW JOHN (LOVE DOG CAT))

Derivation 93
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85383 ((KNOW G85383) ((LOVE X) CAT))))) JOHN) =
    (JOHN (\ X . \ G85387 . KNOW G85387 (LOVE X CAT)) JOHN)

Derivation 94
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE JOHN) CAT)) =
    (KNOW JOHN (LOVE JOHN CAT))

Derivation 95
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE MARY) DOG)) =
    (KNOW JOHN (LOVE MARY DOG))

Derivation 96
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85395 ((KNOW G85395) ((LOVE MARY) X))))) JOHN) =
    (JOHN (\ X . \ G85399 . KNOW G85399 (LOVE MARY X)) JOHN)

Derivation 97
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE MARY) JOHN)) =
    (KNOW JOHN (LOVE MARY JOHN))

Derivation 98
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE DOG) MARY)) =
    (KNOW JOHN (LOVE DOG MARY))

Derivation 99
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85407 ((KNOW G85407) ((LOVE X) MARY))))) JOHN) =
    (JOHN (\ X . \ G85411 . KNOW G85411 (LOVE X MARY)) JOHN)

Derivation 100
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW X) S)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW X) S)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE JOHN) MARY)) =
    (KNOW JOHN (LOVE JOHN MARY))

Derivation 101
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) DOG)) JOHN) =
    (KNOW (LOVE CAT DOG) JOHN)

Derivation 102
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85419 ((KNOW ((LOVE CAT) X)) G85419)))) JOHN) =
    (JOHN (\ X . \ G85423 . KNOW (LOVE CAT X) G85423) JOHN)

Derivation 103
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) JOHN)) JOHN) =
    (KNOW (LOVE CAT JOHN) JOHN)

Derivation 104
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE DOG) CAT)) JOHN) =
    (KNOW (LOVE DOG CAT) JOHN)

Derivation 105
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85431 ((KNOW ((LOVE X) CAT)) G85431)))) JOHN) =
    (JOHN (\ X . \ G85435 . KNOW (LOVE X CAT) G85435) JOHN)

Derivation 106
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) CAT)) JOHN) =
    (KNOW (LOVE JOHN CAT) JOHN)

Derivation 107
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) DOG)) JOHN) =
    (KNOW (LOVE MARY DOG) JOHN)

Derivation 108
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85443 ((KNOW ((LOVE MARY) X)) G85443)))) JOHN) =
    (JOHN (\ X . \ G85447 . KNOW (LOVE MARY X) G85447) JOHN)

Derivation 109
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) JOHN)) JOHN) =
    (KNOW (LOVE MARY JOHN) JOHN)

Derivation 110
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P DOG))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P DOG))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P DOG))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE DOG) MARY)) JOHN) =
    (KNOW (LOVE DOG MARY) JOHN)

Derivation 111
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (LAM X ((JOHN P) X)))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (LAM X ((JOHN P) X)))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (LAM X ((JOHN P) X)))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((JOHN (LAM X (LAM G85455 ((KNOW ((LOVE X) MARY)) G85455)))) JOHN) =
    (JOHN (\ X . \ G85459 . KNOW (LOVE X MARY) G85459) JOHN)

Derivation 112
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
LEX   (JOHN) := (S\NP)\((S\NP)/NP)
        : (LAM P (P JOHN))
<     (KNOWS MARY LOVES)(JOHN) := S\NP
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM S (LAM X ((KNOW S) X)))
             ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X))))
>     (JOHN)(KNOWS MARY LOVES JOHN) := S
        : ((LAM P (P JOHN))
           ((LAM P (P JOHN))
            (LAM X
             ((LAM S (LAM X ((KNOW S) X)))
              ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
               X)))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) MARY)) JOHN) =
    (KNOW (LOVE JOHN MARY) JOHN)

Derivation 113
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P DOG))
            ((LAM X
              ((LAM S (LAM X ((KNOW X) S)))
               ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P DOG))
             ((LAM X
               ((LAM S (LAM X ((KNOW X) S)))
                ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE CAT) JOHN)) =
    (KNOW DOG (LOVE CAT JOHN))

Derivation 114
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P DOG))
            ((LAM X
              ((LAM S (LAM X ((KNOW X) S)))
               ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P DOG))
             ((LAM X
               ((LAM S (LAM X ((KNOW X) S)))
                ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE JOHN) CAT)) =
    (KNOW DOG (LOVE JOHN CAT))

Derivation 115
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P DOG))
            ((LAM X
              ((LAM S (LAM X ((KNOW X) S)))
               ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P DOG))
             ((LAM X
               ((LAM S (LAM X ((KNOW X) S)))
                ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE MARY) JOHN)) =
    (KNOW DOG (LOVE MARY JOHN))

Derivation 116
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P DOG))
            ((LAM X
              ((LAM S (LAM X ((KNOW X) S)))
               ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P DOG))
             ((LAM X
               ((LAM S (LAM X ((KNOW X) S)))
                ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW DOG) ((LOVE JOHN) MARY)) =
    (KNOW DOG (LOVE JOHN MARY))

Derivation 117
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P DOG))
            ((LAM X
              ((LAM S (LAM X ((KNOW S) X)))
               ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P DOG))
             ((LAM X
               ((LAM S (LAM X ((KNOW S) X)))
                ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) JOHN)) DOG) =
    (KNOW (LOVE CAT JOHN) DOG)

Derivation 118
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P DOG))
            ((LAM X
              ((LAM S (LAM X ((KNOW S) X)))
               ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P DOG))
             ((LAM X
               ((LAM S (LAM X ((KNOW S) X)))
                ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) CAT)) DOG) =
    (KNOW (LOVE JOHN CAT) DOG)

Derivation 119
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P DOG))
            ((LAM X
              ((LAM S (LAM X ((KNOW S) X)))
               ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P DOG))
             ((LAM X
               ((LAM S (LAM X ((KNOW S) X)))
                ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) JOHN)) DOG) =
    (KNOW (LOVE MARY JOHN) DOG)

Derivation 120
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P DOG))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P DOG))
            ((LAM X
              ((LAM S (LAM X ((KNOW S) X)))
               ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P DOG))
             ((LAM X
               ((LAM S (LAM X ((KNOW S) X)))
                ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) MARY)) DOG) =
    (KNOW (LOVE JOHN MARY) DOG)

Derivation 121
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P JOHN))
            ((LAM X
              ((LAM S (LAM X ((KNOW X) S)))
               ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P JOHN))
             ((LAM X
               ((LAM S (LAM X ((KNOW X) S)))
                ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE CAT) JOHN)) =
    (KNOW JOHN (LOVE CAT JOHN))

Derivation 122
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P JOHN))
            ((LAM X
              ((LAM S (LAM X ((KNOW X) S)))
               ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P JOHN))
             ((LAM X
               ((LAM S (LAM X ((KNOW X) S)))
                ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE JOHN) CAT)) =
    (KNOW JOHN (LOVE JOHN CAT))

Derivation 123
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P JOHN))
            ((LAM X
              ((LAM S (LAM X ((KNOW X) S)))
               ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P JOHN))
             ((LAM X
               ((LAM S (LAM X ((KNOW X) S)))
                ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE MARY) JOHN)) =
    (KNOW JOHN (LOVE MARY JOHN))

Derivation 124
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW X) S)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW X) S)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P JOHN))
            ((LAM X
              ((LAM S (LAM X ((KNOW X) S)))
               ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P JOHN))
             ((LAM X
               ((LAM S (LAM X ((KNOW X) S)))
                ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW JOHN) ((LOVE JOHN) MARY)) =
    (KNOW JOHN (LOVE JOHN MARY))

Derivation 125
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P JOHN))
            ((LAM X
              ((LAM S (LAM X ((KNOW S) X)))
               ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P JOHN))
             ((LAM X
               ((LAM S (LAM X ((KNOW S) X)))
                ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE CAT) JOHN)) JOHN) =
    (KNOW (LOVE CAT JOHN) JOHN)

Derivation 126
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P CAT))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P JOHN))
            ((LAM X
              ((LAM S (LAM X ((KNOW S) X)))
               ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P JOHN))
             ((LAM X
               ((LAM S (LAM X ((KNOW S) X)))
                ((LAM X ((LAM P (P CAT)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) CAT)) JOHN) =
    (KNOW (LOVE JOHN CAT) JOHN)

Derivation 127
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE Y) X)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P JOHN))
            ((LAM X
              ((LAM S (LAM X ((KNOW S) X)))
               ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P JOHN))
             ((LAM X
               ((LAM S (LAM X ((KNOW S) X)))
                ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE Y) X))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE MARY) JOHN)) JOHN) =
    (KNOW (LOVE MARY JOHN) JOHN)

Derivation 128
--------------
LEX   (JOHN) := S/(S\NP)
        : (LAM P (P JOHN))
LEX   (KNOWS) := (S\*NP)/^S
        : (LAM S (LAM X ((KNOW S) X)))
LEX   (MARY) := S/(S\NP)
        : (LAM P (P MARY))
LEX   (LOVES) := (S\*NP)/^NP
        : (LAM X (LAM Y ((LOVE X) Y)))
>B    (MARY)(LOVES) := S/^NP
        : (LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
>B    (KNOWS)(MARY LOVES) := (S\*NP)/^NP
        : (LAM X
           ((LAM S (LAM X ((KNOW S) X)))
            ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X))) X)))
>B    (JOHN)(KNOWS MARY LOVES) := S/^NP
        : (LAM X
           ((LAM P (P JOHN))
            ((LAM X
              ((LAM S (LAM X ((KNOW S) X)))
               ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                X)))
             X)))
LEX   (JOHN) := S\(S/NP)
        : (LAM P (P JOHN))
<     (JOHN KNOWS MARY LOVES)(JOHN) := S
        : ((LAM P (P JOHN))
           (LAM X
            ((LAM P (P JOHN))
             ((LAM X
               ((LAM S (LAM X ((KNOW S) X)))
                ((LAM X ((LAM P (P MARY)) ((LAM X (LAM Y ((LOVE X) Y))) X)))
                 X)))
              X))))

Final LF, normal-order evaluated: 

    ((KNOW ((LOVE JOHN) MARY)) JOHN) =
    (KNOW (LOVE JOHN MARY) JOHN)

Try (cky-pprint) to see the details including the features and slash modalities.
    (cky-reveal-cell <cell>) to pretty-print the parse in <cell>.
NIL
> (status)

To see rule switches, do (switches)
  To beam or not to beam    : NIL
  Normal Form (NF) parse    : T
  Out of vocabulary flag    : NIL
 *PRINT-READABLY*           : NIL
 *PRINT-PRETTY*             : T
  Currently loaded grammar  : new-g1.ind
 *CCG-GRAMMAR*              : 18 items
 *LEX-RULES-TABLE*          : 0 items
 *CKY-HASHTABLE*            : 300 items
 *CKY-INPUT* for the table  : (JOHN KNOWS MARY LOVES JOHN) 
  Most likely LF w/weight   : (393.1963 ((KNOW ((LOVE JOHN) MARY)) JOHN)) 
  Its most likely derivation: (5 1 112)
  Sum of weighted counts    : 2131.414 
  Most likely LF's cells    : ((5 1 128) (5 1 112) (5 1 88) (5 1 84)) 
  Number of differing LFs   : 64 
  Most weighted derivation  : (5 1 112) 
NIL
> (dribble)
