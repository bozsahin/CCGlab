#!/bin/bash
# installs CCGlab externals, to go with git ccglab repo.   -cem bozsahin
#  also sets PATH and lisp execs so that ccglab is available from anywhere
# brew does not allow sudo anymore-- $SUDO controls that

echo '================================================='
echo 'CCGlab external resources install and path set up'
echo '================================================='
# check to see if there is already a ccglab
if [ "$CCGLAB_HOME" ]; then
  echo " : You have a CCGlab installed at $CCGLAB_HOME."
  echo ' : There is no need to reinstall. Just do "git pull" for the latest.'
  exit -1
fi
SUDO=sudo
ccglabdir=`pwd`
# check to see if lalr has been installed before
if [ ! "$LALR_HOME" ]; then
  lalr=$ccglabdir
  echo " : lalrparser.lisp package is external to CCGlab and required; putting it in $lalr"
  wget -v --no-check-certificate --backups=3 http://web.science.mq.edu.au/~mjohnson/code/lalrparser.lisp
else
  lalr=$LALR_HOME
fi
# check to see if a Lisp for ccglab has been installed before
if [ -x /usr/local/bin/sbcl ] || [ -x /usr/bin/sbcl ] || [ -x /usr/local/bin/ccl ] || [ -x /usr/bin/ccl ]; then
  echo ' : An installed ANSI Common Lisp has been found'
  if [ `which ccl` ]; then
  	echo " : You have `which ccl`"
	locallisp=`which ccl`
  fi
  if [ `which sbcl` ]; then
  	echo " : You have `which sbcl`"
	locallisp=`which sbcl`
  fi
  echo      " : using $locallisp as Lisp" 
  echo      '   you can change that in .bashrc file'
fi
#check if lisp needs installing
if [ ! "$locallisp" ]; then
  if [ -x /usr/bin/yum ] || [ -x /usr/local/bin/yum ]; then
	  packager=yum   
  fi
  if [ -x /usr/bin/apt-get ] || [ -x /usr/local/bin/apt-get ]; then
	packager=apt-get
  fi
  if [ -x /usr/local/bin/brew ] || [ -x /sw/bin/brew ] || [ -x /sw/local/bin/brew ]; then
    	packager=brew
	SUDO=
  fi
  if [ "$packager" ]; then
	echo ' : you have an installer for standard packages'
	echo '   Installing SBCL and rlwrap from standard repositories'
	echo ' : WARNING: you need install and write access now'
	$SUDO $packager install sbcl
	locallisp=`which sbcl`
	if [ -x /usr/local/bin/rlwrap ] || [ -x /usr/bin/rlwrap ] || [ -x /sw/bin/rlwrap ] || [ -x /sw/local/bin/rlwrap ]; then
		echo ' : Using local rlwrap'
	else 
		echo ' :  rlwrap not found. It is very annoying NOT to have it when you run ccglab'
		echo ' :  WARNING: you need install and write access now'
		$SUDO $packager install rlwrap
        fi
  else
	echo ' : apt-get, yum or brew not found. I leave Common Lisp and rlwrap handling to you.'
	echo '   The README.md in the git repo shows how you can set them manually.'
  fi
fi
printf '%s\n' '# stuff added by CCGlab installer' >> ~/.bashrc
if [ -x /usr/local/bin/rlwrap ] || [ -x /usr/bin/rlwrap ] || [ -x /sw/bin/rlwrap ] || [ -x /sw/local/bin/rlwrap ]; then
  printf '%s\n' 'export RLWRAP=rlwrap' >> ~/.bashrc
else
  printf '%s\n' 'export RLWRAP=' >> ~/.bashrc
  echo ' : If rlwrap is installed later, change the RLWRAP variable in ~/.bashrc'
fi
printf '%s\n%s\n%s\n%s\n' "export CCGLAB_HOME=$ccglabdir" "export CCGLAB_LISP=$locallisp" "export LALR_HOME=$lalr" "export PATH=:.:\$CCGLAB_HOME/bin:\$PATH" >> ~/.bashrc
printf '%s\n' '# end of stuff added by CCGlab installer' >> ~/.bashrc
printf '%s\n' '# stuff added by CCGlab installer' >> ~/.bash_profile
printf '%s\n' 'if [ -f ~/.bashrc ]; then source ~/.bashrc; fi' >> ~/.bash_profile
echo ' : Just do "git pull" in ccglab home for updates from now on.'
echo " : I wouldnt do updates in standard files of $ccglabdir."
echo "   They will be overridden by next git pull"
echo '   The manual has some pointers for grammar and model development workflows'
echo ' : To run, first open a fresh terminal, or logout and login. Then do'
echo ' : ccglab'
echo 'CCGlab install: completed.'
echo '================================================='
