#!/bin/bash
# installs CCGlab externals, to go with git ccglab repo. 
#  also sets PATH and lisp execs so that ccglab is available from anywhere
# brew does not allow sudo anymore-- $SUDO controls that
# cem bozsahin 2015-2021
# check to see if there is already a ccglab
if [ "$CCGLAB_HOME" ]; then
  echo "You have a CCGlab installed at:\n $CCGLAB_HOME."
  echo "There is no need to reinstall.\n Just do 'git pull' at $CCGLAB_HOME for the latest."
  exit -1
fi
LOG="=======================================================\nCCGlab install and set up, `date`\n=======================================================" # installers can be very verbose, accumulate all deeds to report at end
LOGFILE='/tmp/log.ccglab-install'
LOG+="\n-CCGlab install and use command-line resources:"
LOG+="\n  wget=`which wget`"
LOG+="\n  git=`which git`"
LOG+="\n  awk=`which awk`"
LOG+="\n  sed=`which sed`"
if [ ! `which wget` ] || [ ! `which awk` ] || [ ! `which git` ] || [ ! `which sed` ]; then
  LOG+="\n-Your system is missing some install and CCGlab command-line basics.\n-Make sure you have awk, sed, wget and git"
  LOG+="\n-Check the top of this log file to find out which one is missing"
  LOG+="\n-Install the missing one in your system before CCGlab install and use"
  LOG+="\n-CCGlab install: ABORTED"
else
echo "PLEASE NOTE:"
echo "  IN CASE THE INSTALLER ASKS FOR superuser PASSWORD,"
echo "  It will be ONLY for installing sbcl and rlwrap"
echo " "
SUDO=sudo
ccglabdir=`pwd`
if [ -d /usr/local/bin ]; then
  lalrdir='/usr/local/bin'
else
  lalrdir='/tmp'
fi
# check to see if lalr has been installed before
if [ ! "$LALR_HOME" ]; then
  wget -v --no-check-certificate --backups=3 http://web.science.mq.edu.au/~mjohnson/code/lalrparser.lisp
  LOG+="\n-LALR parser freshly installed at $lalrdir"
  mv lalrparser.lisp $lalrdir  # -o option of wget is unpredictable
else
  lalrdir=$LALR_HOME
  LOG+="\n-LALR parser taken from $LALR_HOME"
fi
# check to see if a Lisp for ccglab has been installed before
if [ `which ccl` ] || [ `which ccl` ]; then
  if [ `which ccl` ]; then
	locallisp=`which ccl`
	LOG+="\n-ccl Lisp found at $locallisp"
  fi
  if [ `which sbcl` ]; then
	locallisp=`which sbcl`
	LOG+="\n-sbcl Lisp found at $locallisp"
  fi
  LOG+="\n-Using $locallisp as Lisp for ccglab" 
  LOG+="\n-You can change that in .bashrc file"
fi
#check if lisp needs installing
if [ ! "$locallisp" ]; then
  if [ `which yum` ]; then
	  packager=yum   
	  # open library space of yum
	  $SUDO yum install yum-utils
	  $SUDO yum-config-manager --enable \*
  fi
  if [ `which apt-get` ]; then
	packager=apt-get
	# open library space of apt-get and refresh
	$SUDO add-apt-repository universe
	$SUDO apt-get update
  fi
  if [ `which brew` ]; then
    	packager=brew
	SUDO=
  fi
  if [ "$packager" ]; then
	LOG+="\n-You have an installer ($packager) for standard packages"
	LOG+="\n-Installing SBCL Lisp and rlwrap from standard repositories"
	$SUDO $packager install sbcl
	locallisp=`which sbcl`
	if [ `which rlwrap` ]; then
		LOG+="\n-Using local rlwrap"
	else 
		LOG+="\n-rlwrap not found. It is very annoying NOT to have it when you run ccglab"
		$SUDO $packager install rlwrap
        fi
  else
	LOG+="\n-apt-get, yum or brew not found. I leave Common Lisp and rlwrap handling to you."
	LOG+="\n-The README.md in the git repo shows how you can set them manually."
  fi
fi
printf '%s\n' '# stuff added by CCGlab installer' >> ~/.bashrc
if [ `which rlwrap` ]; then
  printf '%s\n' 'export RLWRAP=rlwrap' >> ~/.bashrc
else
  printf '%s\n' 'export RLWRAP=' >> ~/.bashrc
  LOG+='\n-If rlwrap is installed later, change the RLWRAP variable in ~/.bashrc'
fi
printf '%s\n%s\n%s\n%s\n' "export CCGLAB_HOME=$ccglabdir" "export CCGLAB_LISP=$locallisp" "export LALR_HOME=$lalrdir" "export PATH=:.:\$CCGLAB_HOME/bin:\$PATH" >> ~/.bashrc
printf '%s\n' '# end of stuff added by CCGlab installer' >> ~/.bashrc
printf '%s\n' '# stuff added by CCGlab installer' >> ~/.bash_profile
printf '%s\n' 'if [ -f ~/.bashrc ]; then source ~/.bashrc; fi' >> ~/.bash_profile
LOG+='\n-Your .bashrc and .bash_profile have been updated for CCGlab'
LOG+='\n-Just do "git pull" in ccglab home for updates from now on.'
LOG+="\n-I wouldnt do updates in standard files of $ccglabdir."
LOG+="\n-They will be overridden by next git pull"
LOG+="\n-CCGlab manual has some pointers for grammar and model development workflows"
LOG+="\n-To run, first open a fresh terminal, or logout and login. Then do"
LOG+="\n  ccglab"
LOG+="\n-CCGlab install: COMPLETED"
fi
LOG+="\n-This log is saved in file $LOGFILE"
LOG+="\n`date`\n======================================================="
echo -e $LOG > $LOGFILE
echo -e $LOG
